(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):a.CanvasFreeDrawing=b()})(this,function(){"use strict";function a(b){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},a(b)}function b(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function c(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function d(a,b,d){return b&&c(a.prototype,b),d&&c(a,d),a}function e(a){return f(a)||g(a)||h()}function f(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function g(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function h(){throw new TypeError("Invalid attempt to spread non-iterable instance")}var i=function(){var f=Math.abs;function c(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};b(this,c);var d=a.elementId,e=void 0===d?this.requiredParam("elementId"):d,f=a.width,g=void 0===f?this.requiredParam("width"):f,h=a.height,i=void 0===h?this.requiredParam("height"):h,j=a.backgroundColor,k=void 0===j?[255,255,255]:j,l=a.lineWidth,m=void 0===l?5:l,n=a.strokeColor,o=a.disabled,p=a.showWarnings,q=a.maxSnapshots,r=void 0===q?10:q;this.elementId=e,this.canvas=document.getElementById(this.elementId),this.checkCanvasElement(),this.context=this.canvas.getContext("2d"),this.width=g,this.height=i,this.maxSnapshots=r,this.snapshots=[],this.undos=[],this.positions=[],this.leftCanvasDrawing=!1,this.isDrawing=!1,this.isDrawingModeEnabled=!0,this.imageRestored=!1,this.lineWidth=m,this.strokeColor=this.validateColor(n,!0),this.bucketToolColor=this.validateColor(n,!0),this.bucketToolTolerance=0,this.isBucketToolEnabled=!1,this.listenersList=["mouseDown","mouseMove","mouseLeave","mouseUp","touchStart","touchMove","touchEnd"],this.allowedEvents=["redraw","mouseup","mousedown","mouseenter","mouseleave"],this.redrawCounter=0,this.dispatchEventsOnceEvery=0,this.redrawEvent=new Event("cfd_redraw"),this.mouseUpEvent=new Event("cfd_mouseup"),this.mouseDownEvent=new Event("cfd_mousedown"),this.mouseEnterEvent=new Event("cfd_mouseenter"),this.mouseLeaveEvent=new Event("cfd_mouseleave"),this.touchStartEvent=new Event("cfd_touchstart"),this.touchEndEvent=new Event("cfd_touchend"),this.mouseDown=this.mouseDown.bind(this),this.mouseMove=this.mouseMove.bind(this),this.mouseLeave=this.mouseLeave.bind(this),this.mouseUp=this.mouseUp.bind(this),this.mouseUpDocument=this.mouseUpDocument.bind(this),this.touchStart=this.touchStart.bind(this),this.touchMove=this.touchMove.bind(this),this.touchEnd=this.touchEnd.bind(this),this.touchIdentifier=null,this.previousX=null,this.previousY=null,this.showWarnings=void 0!==p&&p,this.isNodeColorEqualCache=[],this.setDimensions(),this.setBackground(k),this.storeSnapshot(),o||this.enableDrawingMode()}return d(c,[{key:"requiredParam",value:function(a){throw new Error("".concat(a," is required"))}},{key:"logWarning",value:function(){var a;this.showWarnings&&(a=console).warn.apply(a,arguments)}},{key:"checkCanvasElement",value:function(){if("CANVAS"!==this.canvas.tagName){var a=document.createElement("canvas");this.canvas.appendChild(a),this.canvas=a}}},{key:"addListeners",value:function(){var a=this;this.listenersList.forEach(function(b){a.canvas.addEventListener(b.toLowerCase(),a[b])}),document.addEventListener("mouseup",this.mouseUpDocument)}},{key:"removeListeners",value:function(){var a=this;this.listenersList.forEach(function(b){a.canvas.removeEventListener(b.toLowerCase(),a[b])}),document.removeEventListener("mouseup",this.mouseUpDocument)}},{key:"enableDrawingMode",value:function(){return this.isDrawingModeEnabled=!0,this.addListeners(),this.toggleCursor(),this.isDrawingModeEnabled}},{key:"disableDrawingMode",value:function(){return this.isDrawingModeEnabled=!1,this.removeListeners(),this.toggleCursor(),this.isDrawingModeEnabled}},{key:"mouseDown",value:function(a){if(0===a.button){var b=a.pageX-this.canvas.offsetLeft,c=a.pageY-this.canvas.offsetTop;return this.drawPoint(b,c)}}},{key:"mouseMove",value:function(a){var b=a.pageX-this.canvas.offsetLeft,c=a.pageY-this.canvas.offsetTop;this.drawLine(b,c)}},{key:"touchStart",value:function(a){if(0<a.changedTouches.length){var b=a.changedTouches[0],c=b.pageX,d=b.pageY,e=b.identifier,f=c-this.canvas.offsetLeft,g=d-this.canvas.offsetTop;return this.touchIdentifier=e,this.drawPoint(f,g)}}},{key:"touchMove",value:function(a){if(0<a.changedTouches.length){var b=a.changedTouches[0],c=b.pageX,d=b.pageY,e=b.identifier,f=c-this.canvas.offsetLeft,g=d-this.canvas.offsetTop;if(e!=this.touchIdentifier)return;this.previousX=f,this.previousY=g,this.drawLine(f,g)}}},{key:"touchEnd",value:function(){this.handleEndDrawing(),this.canvas.dispatchEvent(this.touchEndEvent)}},{key:"mouseUp",value:function(){this.handleEndDrawing(),this.canvas.dispatchEvent(this.mouseUpEvent)}},{key:"mouseUpDocument",value:function(){this.leftCanvasDrawing=!1}},{key:"mouseLeave",value:function(){this.isDrawing&&(this.leftCanvasDrawing=!0),this.isDrawing=!1,this.canvas.dispatchEvent(this.mouseLeaveEvent)}},{key:"mouseEnter",value:function(){this.canvas.dispatchEvent(this.mouseEnterEvent)}},{key:"handleEndDrawing",value:function(){this.isDrawing=!1,this.storeSnapshot()}},{key:"drawPoint",value:function(a,b){return this.isBucketToolEnabled?this.fill(a,b,this.bucketToolColor,{tolerance:this.bucketToolTolerance}):void(this.isDrawing=!0,this.storeDrawing(a,b,!1),this.canvas.dispatchEvent(this.mouseDownEvent),this.handleDrawing())}},{key:"drawLine",value:function(a,b){this.leftCanvasDrawing&&(this.leftCanvasDrawing=!1,this.mouseDown(event)),this.isDrawing&&(this.storeDrawing(a,b,!0),this.handleDrawing({dispatchEventsOnceEvery:this.dispatchEventsOnceEvery}))}},{key:"handleDrawing",value:function(){var a=this,b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},c=b.dispatchEventsOnceEvery;this.context.lineJoin="round";var d=[e(this.positions).pop()];d.forEach(function(b){a.context.strokeStyle=a.rgbaFromArray(b[0].strokeColor),a.context.lineWidth=b[0].lineWidth,a.draw(b)}),c?0==this.redrawCounter%c&&this.canvas.dispatchEvent(this.redrawEvent):this.canvas.dispatchEvent(this.redrawEvent),this.undos=[],this.redrawCounter+=1}},{key:"draw",value:function(a){var b=this;a.forEach(function(c,d){var e=c.x,f=c.y,g=c.moving;b.context.beginPath(),g&&d?b.context.moveTo(a[d-1].x,a[d-1].y):b.context.moveTo(e-1,f),b.context.lineTo(e,f),b.context.closePath(),b.context.stroke()})}},{key:"fill",value:function(a,b,c,d){var f=this,g=d.tolerance,h=d.storeInPosition;return new Promise(function(d){if(c=f.validateColor(c),0===f.positions.length&&!f.imageRestored)return f.setBackground(c,!1),void f.canvas.dispatchEvent(f.redrawEvent);var j=f.context.getImageData(0,0,f.width,f.height),k=j.data,l=f.getNodeColor(a,b,k);if(!f.isNodeColorEqual(l,c,g)){for(var m=[[a,b]];m.length&&!(m.length>f.width*f.height);){for(var o=m.pop(),n=o,p=o;f.isNodeColorEqual(f.getNodeColor(n[0]-1,n[1],k),l,g);)n=[n[0]-1,n[1]];for(;f.isNodeColorEqual(f.getNodeColor(p[0]+1,p[1],k),l,g);)p=[p[0]+1,p[1]];for(var q=n[0],r=p[0],s=q;s<=r;s++)f.setNodeColor(s,n[1],c,k),f.isNodeColorEqual(f.getNodeColor(s,n[1]+1,k),l,g)&&m.push([s,n[1]+1]),f.isNodeColorEqual(f.getNodeColor(s,n[1]-1,k),l,g)&&m.push([s,n[1]-1])}f.context.putImageData(j,0,0),f.canvas.dispatchEvent(f.redrawEvent),(void 0===h||h)&&f.positions.push({isBucket:!0,x:a,y:b,newColor:c,tolerance:g}),d(!0)}})}},{key:"validateColor",value:function(b,c){if("object"===a(b)&&4===b.length&&b.pop(),"object"===a(b)&&3===b.length){var d=e(b);return d.push(255),d}return c?[0,0,0,255]:(this.logWarning("Color is not valid! It must be an array with RGB values:  [0-255, 0-255, 0-255]"),null)}},{key:"isNodeColorEqual",value:function(a,b,c){var d=""+a[0]+a[1]+a[2]+a[3],e=""+b[0]+b[1]+b[2]+b[3];if(c=c||0,this.isNodeColorEqualCache.hasOwnProperty(d+e+c))return this.isNodeColorEqualCache[d+e+c];var g=f(b[0]-a[0]),h=f(b[1]-a[1]),i=f(b[2]-a[2]),j=c>=100*((g/255+h/255+i/255)/3);return this.isNodeColorEqualCache[d+e+c]=j,j}},{key:"getNodeColor",value:function(a,b,c){var d=4*(a+b*this.width);return[c[d],c[d+1],c[d+2],c[d+3]]}},{key:"setNodeColor",value:function(a,b,c,d){var e=4*(a+b*this.width);d[e]=c[0],d[e+1]=c[1],d[e+2]=c[2],d[e+3]=c[3]}},{key:"rgbaFromArray",value:function(b){return"rgba(".concat(b[0],",").concat(b[1],",").concat(b[2],",").concat(b[3],")")}},{key:"setDimensions",value:function(){this.canvas.height=this.height,this.canvas.width=this.width}},{key:"toggleCursor",value:function(){this.canvas.style.cursor=this.isDrawingModeEnabled?"crosshair":"auto"}},{key:"storeDrawing",value:function(a,b,c){c?this.positions[this.positions.length-1].push({x:a,y:b,moving:c,lineWidth:this.lineWidth,strokeColor:this.strokeColor}):this.positions.push([{x:a,y:b,moving:c,lineWidth:this.lineWidth,strokeColor:this.strokeColor}])}},{key:"storeSnapshot",value:function(){var a=this;new Promise(function(b){var c=a.getCanvasSnapshot();a.snapshots.push(c),a.snapshots.length>a.maxSnapshots&&(a.snapshots=a.snapshots.splice(-f(a.maxSnapshots))),b()})}},{key:"getCanvasSnapshot",value:function(){return this.context.getImageData(0,0,this.width,this.height)}},{key:"restoreCanvasSnapshot",value:function(a){this.context.putImageData(a,0,0)}},{key:"on",value:function(a,b){var c=Number.isInteger,d=a.event,e=void 0===d?this.requiredParam("event"):d,f=a.counter;this.allowedEvents.includes(e)?("redraw"===e&&c(f)&&(this.dispatchEventsOnceEvery=parseInt(f)),this.canvas.addEventListener("cfd_"+e,function(){return b()})):this.logWarning("This event is not allowed: ".concat(e))}},{key:"setLineWidth",value:function(a){this.lineWidth=a}},{key:"setBackground",value:function(a){var b=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],c=this.validateColor(a);c&&(b&&(this.backgroundColor=c),this.context.fillStyle=this.rgbaFromArray(c),this.context.fillRect(0,0,this.width,this.height))}},{key:"setDrawingColor",value:function(a){this.configBucketTool({color:a}),this.setStrokeColor(a)}},{key:"setStrokeColor",value:function(a){this.strokeColor=this.validateColor(a,!0)}},{key:"configBucketTool",value:function(a){var b=a.color,c=void 0===b?null:b,d=a.tolerance,e=void 0===d?null:d;c&&(this.bucketToolColor=this.validateColor(c)),e&&0<e&&(this.bucketToolTolerance=100<e?100:e)}},{key:"toggleBucketTool",value:function(){return this.isBucketToolEnabled=!this.isBucketToolEnabled}},{key:"isBucketToolEnabled",value:function(){return this.isBucketToolEnabled}},{key:"toggleDrawingMode",value:function(){return this.isDrawingModeEnabled?this.disableDrawingMode():this.enableDrawingMode()}},{key:"isDrawingModeEnabled",value:function(){return this.isDrawingModeEnabled}},{key:"clear",value:function(){this.context.clearRect(0,0,this.width,this.height),this.lastPath=[],this.positions=[],this.setBackground(this.backgroundColor),this.handleEndDrawing()}},{key:"save",value:function(){return this.canvas.toDataURL()}},{key:"restore",value:function(a,b){var c=this,d=new Image;d.src=a,d.onload=function(){c.imageRestored=!0,c.context.drawImage(d,0,0),"function"==typeof b&&b()}}},{key:"undo",value:function(){var a=this.snapshots[this.snapshots.length-1],b=this.snapshots[this.snapshots.length-2];b?(this.restoreCanvasSnapshot(b),this.snapshots.pop(),this.undos.push(a),this.undos=this.undos.splice(-f(this.maxSnapshots))):this.logWarning("There are no more undos left.")}},{key:"redo",value:function(){if(0<this.undos.length){var a=this.undos.pop();this.restoreCanvasSnapshot(a),this.snapshots.push(a),this.snapshots=this.snapshots.splice(-f(this.maxSnapshots))}else this.logWarning("There are no more redo left.")}}]),c}();return i});